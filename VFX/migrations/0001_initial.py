# Generated by Django 3.2.6 on 2021-09-20 11:20

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('EHub', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DebrisandCracksVfx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('FREE', 'FREE'), ('PAID', 'PAID')], max_length=20, null=True)),
                ('name', models.CharField(max_length=200, null=True)),
                ('price', models.DecimalField(decimal_places=2, help_text='Set the price to 0 if the product type is free.', max_digits=6, max_length=4, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('paidproduct', models.FileField(blank=True, help_text='Provide a WatermarkProduct.This product is just a showcase to Customers. Only .mp4 is accepted', null=True, upload_to='VFX/DebrisandCracks/paid/%y', validators=[django.core.validators.FileExtensionValidator(['mp4'])])),
                ('freeproduct', models.FileField(blank=True, help_text='Provide a Watermark free Product to distribute to Customers. Only .mp4 is accepted', null=True, upload_to='VFX/DebrisandCracks/free/%y', validators=[django.core.validators.FileExtensionValidator(['mp4'])])),
                ('date_published', models.DateField(auto_now_add=True, null=True)),
                ('publisher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='EHub.customer')),
            ],
        ),
        migrations.CreateModel(
            name='EnergyVfx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('FREE', 'FREE'), ('PAID', 'PAID')], max_length=20, null=True)),
                ('name', models.CharField(max_length=200, null=True)),
                ('price', models.DecimalField(decimal_places=2, help_text='Set the price to 0 if the product type is free.', max_digits=6, max_length=4, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('paidproduct', models.FileField(blank=True, help_text='Provide a WatermarkProduct.This product is just a showcase to Customers. Only .mp4 is accepted', null=True, upload_to='VFX/Energy/paid/%y', validators=[django.core.validators.FileExtensionValidator(['mp4'])])),
                ('freeproduct', models.FileField(blank=True, help_text='Provide a Watermark free Product to distribute to Customers .Only .mp4 is accepted', null=True, upload_to='VFX/Energy/free/%y', validators=[django.core.validators.FileExtensionValidator(['mp4'])])),
                ('date_published', models.DateField(auto_now_add=True, null=True)),
                ('publisher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='EHub.customer')),
            ],
        ),
        migrations.CreateModel(
            name='EnvironmentalVfx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('FREE', 'FREE'), ('PAID', 'PAID')], max_length=20, null=True)),
                ('name', models.CharField(max_length=200, null=True)),
                ('price', models.DecimalField(decimal_places=2, help_text='Set the price to 0 if the product type is free.', max_digits=6, max_length=4, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('paidproduct', models.FileField(blank=True, help_text='Provide a WatermarkProduct.This product is just a showcase to Customers. Only .mp4 is accepted', null=True, upload_to='VFX/MuzzleFlashes/paid/%y', validators=[django.core.validators.FileExtensionValidator(['mp4'])])),
                ('freeproduct', models.FileField(blank=True, help_text='Provide a Watermark free Product to distribute to Customers. Only .mp4 is accepted', null=True, upload_to='VFX/MuzzleFlashes/free/%y', validators=[django.core.validators.FileExtensionValidator(['mp4'])])),
                ('date_published', models.DateField(auto_now_add=True, null=True)),
                ('publisher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='EHub.customer')),
            ],
        ),
        migrations.CreateModel(
            name='LightiningVfx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('FREE', 'FREE'), ('PAID', 'PAID')], max_length=20, null=True)),
                ('name', models.CharField(max_length=200, null=True)),
                ('price', models.DecimalField(decimal_places=2, help_text='Set the price to 0 if the product type is free.', max_digits=6, max_length=4, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('paidproduct', models.FileField(blank=True, help_text='Provide a WatermarkProduct.This product is just a showcase to Customers. Only .mp4 is accepted', null=True, upload_to='VFX/Lightining/free/%y', validators=[django.core.validators.FileExtensionValidator(['mp4'])])),
                ('freeproduct', models.FileField(blank=True, help_text='Provide a Watermark free Product to distribute to Customers .Only .mp4 is accepted', null=True, upload_to='VFX/Lightining/paid/%y', validators=[django.core.validators.FileExtensionValidator(['mp4'])])),
                ('date_published', models.DateField(auto_now_add=True, null=True)),
                ('publisher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='EHub.customer')),
            ],
        ),
        migrations.CreateModel(
            name='MuzzleFlahses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('FREE', 'FREE'), ('PAID', 'PAID')], max_length=20, null=True)),
                ('name', models.CharField(max_length=200, null=True)),
                ('price', models.DecimalField(decimal_places=2, help_text='Set the price to 0 if the product type is free.', max_digits=6, max_length=4, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('paidproduct', models.FileField(blank=True, help_text='Provide a WatermarkProduct.This product is just a showcase to Customers. Only .mp4 is accepted', null=True, upload_to='VFX/MuzzleFlashes/paid/%y', validators=[django.core.validators.FileExtensionValidator(['mp4'])])),
                ('freeproduct', models.FileField(blank=True, help_text='Provide a Watermark free Product to distribute to Customers. Only .mp4 is accepted', null=True, upload_to='VFX/MuzzleFlashes/free/%y', validators=[django.core.validators.FileExtensionValidator(['mp4'])])),
                ('date_published', models.DateField(auto_now_add=True, null=True)),
                ('publisher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='EHub.customer')),
            ],
        ),
        migrations.CreateModel(
            name='ShockwavesVfx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('FREE', 'FREE'), ('PAID', 'PAID')], max_length=20, null=True)),
                ('name', models.CharField(max_length=200, null=True)),
                ('price', models.DecimalField(decimal_places=2, help_text='Set the price to 0 if the product type is free.', max_digits=6, max_length=4, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('paidproduct', models.FileField(blank=True, help_text='Provide a WatermarkProduct.This product is just a showcase to Customers. Only .mp4 is accepted', null=True, upload_to='VFX/Shockwaves/paid/%y', validators=[django.core.validators.FileExtensionValidator(['mp4'])])),
                ('freeproduct', models.FileField(blank=True, help_text='Provide a Watermark free Product to distribute to Customers. Only .mp4 is accepted', null=True, upload_to='VFX/Shockwaves/free/%y', validators=[django.core.validators.FileExtensionValidator(['mp4'])])),
                ('date_published', models.DateField(auto_now_add=True, null=True)),
                ('publisher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='EHub.customer')),
            ],
        ),
        migrations.CreateModel(
            name='ParticlesVfx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('FREE', 'FREE'), ('PAID', 'PAID')], max_length=20, null=True)),
                ('name', models.CharField(max_length=200, null=True)),
                ('price', models.DecimalField(decimal_places=2, help_text='Set the price to 0 if the product type is free.', max_digits=6, max_length=4, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('paidproduct', models.FileField(blank=True, help_text='Provide a WatermarkProduct.This product is just a showcase to Customers. Only .mp4 is accepted', null=True, upload_to='VFX/Particles/paid/%y', validators=[django.core.validators.FileExtensionValidator(['mp4'])])),
                ('freeproduct', models.FileField(blank=True, help_text='Provide a Watermark free Product to distribute to Customers. Only .mp4 is accepted', null=True, upload_to='VFX/Particles/free/%y', validators=[django.core.validators.FileExtensionValidator(['mp4'])])),
                ('date_published', models.DateField(auto_now_add=True, null=True)),
                ('publisher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='EHub.customer')),
            ],
        ),
        migrations.CreateModel(
            name='OrderShockwavesVfx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('complete', models.BooleanField(default=False, null=True)),
                ('data_added', models.DateTimeField(auto_now_add=True)),
                ('published_by', models.CharField(max_length=20, null=True)),
                ('addtoDpage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='EHub.purchasedproducts')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='EHub.customer')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='EHub.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='VFX.shockwavesvfx')),
            ],
        ),
        migrations.CreateModel(
            name='OrderParticleVfx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('complete', models.BooleanField(default=False, null=True)),
                ('data_added', models.DateTimeField(auto_now_add=True)),
                ('published_by', models.CharField(max_length=20, null=True)),
                ('addtoDpage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='EHub.purchasedproducts')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='EHub.customer')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='EHub.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='VFX.particlesvfx')),
            ],
        ),
        migrations.CreateModel(
            name='OrderMuzzleflashesVfx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('complete', models.BooleanField(default=False, null=True)),
                ('data_added', models.DateTimeField(auto_now_add=True)),
                ('published_by', models.CharField(max_length=20, null=True)),
                ('addtoDpage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='EHub.purchasedproducts')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='EHub.customer')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='EHub.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='VFX.muzzleflahses')),
            ],
        ),
        migrations.CreateModel(
            name='OrderLightiningVfx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('complete', models.BooleanField(default=False, null=True)),
                ('data_added', models.DateTimeField(auto_now_add=True)),
                ('published_by', models.CharField(max_length=20, null=True)),
                ('addtoDpage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='EHub.purchasedproducts')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='EHub.customer')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='EHub.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='VFX.lightiningvfx')),
            ],
        ),
        migrations.CreateModel(
            name='OrderEnvironmentalVfx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('complete', models.BooleanField(default=False, null=True)),
                ('data_added', models.DateTimeField(auto_now_add=True)),
                ('published_by', models.CharField(max_length=20, null=True)),
                ('addtoDpage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='EHub.purchasedproducts')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='EHub.customer')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='EHub.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='VFX.environmentalvfx')),
            ],
        ),
        migrations.CreateModel(
            name='OrderEnergyVfx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('complete', models.BooleanField(default=False, null=True)),
                ('data_added', models.DateTimeField(auto_now_add=True)),
                ('published_by', models.CharField(max_length=20, null=True)),
                ('addtoDpage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='EHub.purchasedproducts')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='EHub.customer')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='EHub.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='VFX.energyvfx')),
            ],
        ),
        migrations.CreateModel(
            name='OrderDebrisAndCracksVfx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('complete', models.BooleanField(default=False, null=True)),
                ('data_added', models.DateTimeField(auto_now_add=True)),
                ('published_by', models.CharField(max_length=20, null=True)),
                ('addtoDpage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='EHub.purchasedproducts')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='EHub.customer')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='EHub.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='VFX.debrisandcracksvfx')),
            ],
        ),
    ]
